{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["const spliceString = require('splice-string')\n\nconst contractionsTable = {\n    \"ain't\": ['am not', 'are not', 'is not', 'has not', 'have not'],\n    \"aren't\": ['are not'],\n    \"can't\": ['cannot'],\n    \"could've\": ['could have'],\n    \"couldn't've\": ['could not have'],\n    \"couldn't\": ['could not'],\n    \"didn't\": ['did not'],\n    \"doesn't\": ['does not'],\n    \"don't\": ['do not'],\n    \"gonna\": ['going to'],\n    \"gotta\": ['got a', 'got an', 'got to'],\n    \"hadn't've\": ['had not have'],\n    \"hadn't\": ['had not'],\n    \"hasn't\": ['has not'],\n    \"haven't\": ['have not'],\n    \"he'd've\": ['he would have'],\n    \"he'd\": ['he had', 'he would'],\n    \"he'll\": ['he shall', 'he will'],\n    \"he's\": ['he has', 'he is'],\n    \"how'd\": ['how did', 'how would'],\n    \"how'll\": ['how will'],\n    \"how's\": ['how does', 'how has', 'how is'],\n    \"i'd've\": ['i would have'],\n    \"i'd\": ['i had', 'i would'],\n    \"i'll\": ['i shall', 'i will'],\n    \"i'm\": ['i am'],\n    \"i've\": ['i have'],\n    \"i'ven't\": ['i have not'],\n    \"isn't\": ['is not'],\n    \"it'd've\": ['it would have'],\n    \"it'd\": ['it would'],\n    \"it'll\": ['it shall', 'it will'],\n    \"it's\": ['it has', 'it is'],\n    \"let's\": ['let us'],\n    \"might've\": ['might have'],\n    \"mightn't've\": ['might not have'],\n    \"mightn't\": ['might not'],\n    \"must've\": ['must have'],\n    \"mustn't\": ['must not'],\n    \"needn't\": ['need not'],\n    \"not've\": ['not have'],\n    \"ol'\": ['old'],\n    \"oughtn't\": ['ought not'],\n    \"shan't\": ['shall not'],\n    \"she'd've\": ['she would have'],\n    \"she'd\": ['she had', 'she would'],\n    \"she'll\": ['she shall', 'she will'],\n    \"she's\": ['she has', 'she is'],\n    \"should've\": ['should have'],\n    \"shouldn't've\": ['should not have'],\n    \"shouldn't\": ['should not'],\n    \"somebody'd've\": ['somebody would have'],\n    \"somebody'd\": ['somebody would', 'someone had'],\n    \"somebody'll've\": ['somebody will have'],\n    \"somebody'll\": ['somebody will'],\n    \"somebody's\": ['somebody has', 'somebody is'],\n    \"someone'd've\": ['someone would have'],\n    \"someone'd\": ['someone had', 'someone would'],\n    \"someone'll\": ['someone will'],\n    \"someone's\": ['someone is', 'someone has'],\n    \"something'd've\": ['something would have'],\n    \"something'd\": ['someone would', 'something had'],\n    \"something'll\": ['something will'],\n    \"something's\": ['something has', 'something is'],\n    \"that'd\": ['that had', 'that would'],\n    \"that'll\": ['that shall', 'that will'],\n    \"that's\": ['that has', 'that is'],\n    \"there'd've\": ['there would have'],\n    \"there'd\": ['there had', 'there would'],\n    \"there're\": ['there are'],\n    \"there's\": ['there has', 'there is'],\n    \"they'd've\": ['they would have'],\n    \"they'd\": ['they had', 'they would'],\n    \"they'll\": ['they shall', 'they will'],\n    \"they're\": ['they are'],\n    \"they've\": ['they have'],\n    \"they'ven't\": ['they have not'],\n    \"wanna\": ['want a', 'want an', 'want to'],\n    \"wasn't\": ['was not'],\n    \"we'd've\": ['we would have'],\n    \"we'd\": ['we had', 'we would'],\n    \"we'dn't've\": ['we would not have'],\n    \"we'll\": ['we will'],\n    \"we're\": ['we are'],\n    \"we've\": ['we have'],\n    \"weren't\": ['were not'],\n    \"what'd\": ['what did'],\n    \"what'll\": ['what shall', 'what will'],\n    \"what're\": ['what are'],\n    \"what's\": ['what does', 'what has', 'what is'],\n    \"what've\": ['what have'],\n    \"when's\": ['when has', 'when is'],\n    \"where'd\": ['where did'],\n    \"where're\": ['where are'],\n    \"where's\": ['where does', 'where has', 'where is'],\n    \"where've\": ['where have'],\n    \"who'd've\": ['who would have'],\n    \"who'd\": ['who did', 'who had', 'who would'],\n    \"who'll\": ['who shall', 'who will'],\n    \"who're\": ['who are'],\n    \"who's\": ['who does', 'who has', 'who is'],\n    \"who've\": ['who have'],\n    \"why'd\": ['why did'],\n    \"why'll\": ['why will'],\n    \"why're\": ['why are'],\n    \"why's\": ['why does', 'why has', 'why is'],\n    \"why've\": ['why have'],\n    \"will've\": ['will have'],\n    \"won't've\": ['will not have'],\n    \"won't\": ['will not'],\n    \"would've\": ['would have'],\n    \"wouldn't've\": ['would not have'],\n    \"wouldn't\": ['would not'],\n    \"y'all'd've\": ['you all would have'],\n    \"y'all'dn't've\": ['you all would not have'],\n    \"y'all'll've\": ['you all will have'],\n    \"y'all'll\": ['you all will'],\n    \"y'all've\": ['you all have'],\n    \"y'all'ven't\": ['you all have not'],\n    \"y'all\": ['you all'],\n    \"you'd've\": ['you would have'],\n    \"you'd\": ['you had', 'you would'],\n    \"you'll\": ['you shall', 'you will'],\n    \"you're\": ['you are'],\n    \"you'ren't\": ['you are not'],\n    \"you've\": ['you have'],\n    \"you'ven't\": ['you have not']\n}\n\nconst longformsTable = {\n    \"am not\": \"ain't\",\n    \"are not\": \"ain't\",\n    \"cannot\": \"can't\",\n    \"could have\": \"could've\",\n    // \"could not have\": \"couldn't've\",\n    \"could not\": \"couldn't\",\n    \"did not\": \"didn't\",\n    \"do not\": \"don't\",\n    \"does not\": \"doesn't\",\n    \"going to\": \"gonna\",\n    \"got a\": \"gotta\",\n    \"got an\": \"gotta\",\n    \"got to\": \"gotta\",\n    // \"had not have\": \"hadn't've\",\n    \"had not\": \"hadn't\",\n    \"has not\": \"hasn't\",\n    \"have not\": \"haven't\",\n    \"he had\": \"he'd\",\n    \"he has\": \"he's\",\n    \"he is\": \"he's\",\n    \"he shall\": \"he'll\",\n    \"he will\": \"he'll\",\n    // \"he would have\": \"he'd've\",\n    \"he would\": \"he'd\",\n    \"how did\": \"how'd\",\n    \"how does\": \"how's\",\n    \"how has\": \"how's\",\n    \"how is\": \"how's\",\n    \"how will\": \"how'll\",\n    \"how would\": \"how'd\",\n    \"i am\": \"i'm\",\n    \"i had\": \"i'd\",\n    // \"i have not\": \"i'ven't\",\n    \"i have\": \"i've\",\n    \"i shall\": \"i'll\",\n    \"i will\": \"i'll\",\n    // \"i would have\": \"i'd've\",\n    \"i would\": \"i'd\",\n    \"is not\": \"isn't\",\n    \"it has\": \"it's\",\n    \"it is\": \"it's\",\n    \"it shall\": \"it'll\",\n    \"it will\": \"it'll\",\n    // \"it would have\": \"it'd've\",\n    \"it would\": \"it'd\",\n    \"let us\": \"let's\",\n    \"might have\": \"might've\",\n    // \"might not have\": \"mightn't've\",\n    \"might not\": \"mightn't\",\n    \"must have\": \"must've\",\n    \"must not\": \"mustn't\",\n    \"need not\": \"needn't\",\n    // \"not have\": \"not've\",\n    // \"old\": \"ol'\",\n    \"ought not\": \"oughtn't\",\n    \"shall not\": \"shan't\",\n    \"she had\": \"she'd\",\n    \"she has\": \"she's\",\n    \"she is\": \"she's\",\n    \"she shall\": \"she'll\",\n    \"she will\": \"she'll\",\n    // \"she would have\": \"she'd've\",\n    \"she would\": \"she'd\",\n    \"should have\": \"should've\",\n    // \"should not have\": \"shouldn't've\",\n    \"should not\": \"shouldn't\",\n    \"somebody had\": \"somebody'd\",\n    \"somebody has\": \"somebody's\",\n    \"somebody is\": \"somebody's\",\n    \"somebody will have\": \"somebody'll've\",\n    \"somebody will\": \"somebody'll\",\n    // \"somebody would have\": \"somebody'd've\",\n    \"somebody would\": \"somebody'd\",\n    \"someone had\": \"someone'd\",\n    \"someone is\": \"someone's\",\n    \"someone will\": \"someone'll\",\n    // \"someone would have\": \"someone'd've\",\n    \"someone would\": \"someone'd\",\n    \"something had\": \"something'd\",\n    \"something has\": \"something's\",\n    \"something is\": \"something's\",\n    \"something will\": \"something'll\",\n    // \"something would have\": \"something'd've\",\n    \"something would\": \"something'd\",\n    \"someone has\": \"someone's\",\n    \"that had\": \"that'd\",\n    \"that has\": \"that's\",\n    \"that is\": \"that's\",\n    \"that shall\": \"that'll\",\n    \"that will\": \"that'll\",\n    \"that would\": \"that'd\",\n    \"there are\": \"there're\",\n    \"there had\": \"there'd\",\n    \"there has\": \"there's\",\n    \"there is\": \"there's\",\n    // \"there would have\": \"there'd've\",\n    \"there would\": \"there'd\",\n    \"they are\": \"they're\",\n    \"they had\": \"they'd\",\n    // \"they have not\": \"they'ven't\",\n    \"they have\": \"they've\",\n    \"they shall\": \"they'll\",\n    \"they will\": \"they'll\",\n    // \"they would have\": \"they'd've\",\n    \"they would\": \"they'd\",\n    \"want a\": \"wanna\",\n    \"want an\": \"wanna\",\n    \"want to\": \"wanna\",\n    \"was not\": \"wasn't\",\n    \"we are\": \"we're\",\n    \"we had\": \"we'd\",\n    \"we have\": \"we've\",\n    \"we will\": \"we'll\",\n    \"we would have\": \"we'd've\",\n    \"we would not have\": \"we'dn't've\",\n    \"we would\": \"we'd\",\n    \"were not\": \"weren't\",\n    \"what are\": \"what're\",\n    \"what did\": \"what'd\",\n    \"what does\": \"what's\",\n    \"what has\": \"what's\",\n    \"what have\": \"what've\",\n    \"what is\": \"what's\",\n    \"what shall\": \"what'll\",\n    \"what will\": \"what'll\",\n    \"when has\": \"when's\",\n    \"when is\": \"when's\",\n    \"where are\": \"when're\",\n    \"where did\": \"where'd\",\n    \"where does\": \"where's\",\n    \"where has\": \"where's\",\n    \"where have\": \"where've\",\n    \"where is\": \"where's\",\n    \"who are\": \"who're\",\n    \"who did\": \"who'd\",\n    \"who does\": \"who's\",\n    \"who had\": \"who'd\",\n    \"who has\": \"who's\",\n    \"who have\": \"who've\",\n    \"who is\": \"who's\",\n    \"who shall\": \"who'll\",\n    \"who will\": \"who'll\",\n    // \"who would have\": \"who'd've\",\n    \"who would\": \"who'd\",\n    \"why are\": \"why're\",\n    \"why did\": \"why'd\",\n    \"why does\": \"why's\",\n    \"why has\": \"why's\",\n    \"why have\": \"why've\",\n    \"why is\": \"why's\",\n    \"why will\": \"why'll\",\n    \"will have\": \"will've\",\n    // \"will not have\": \"won't've\",\n    \"will not\": \"won't\",\n    \"would have\": \"would've\",\n    // \"would not have\": \"wouldn't've\",\n    \"would not\": \"wouldn't\",\n    // \"you all have not\": \"y'all'ven't\",\n    // \"you all have\": \"y'all've\",\n    // \"you all will have\": \"y'all'll've\",\n    // \"you all will\": \"y'all'll\",\n    // \"you all would have\": \"y'all'd've\",\n    // \"you all would not have\": \"y'all'dn't've\",\n    \"you all\": \"y'all\",\n    // \"you are not\": \"you'ren't\",\n    \"you are\": \"you're\",\n    \"you had\": \"you'd\",\n    // \"you have not\": \"you'ven't\",\n    \"you have\": \"you've\",\n    \"you shall\": \"you'll\",\n    \"you will\": \"you'll\",\n    // \"you would have\": \"you'd've\",\n    \"you would\": \"you'd\"\n}\n\nconst kontractions = {\n    contractionsTable,\n    longformsTable,\n    updateContractions: function(obj) {\n        Object.assign(this.contractionsTable, obj)\n    },\n    updateLongforms: function(obj) {\n        Object.assign(this.longformsTable, obj)\n    },\n    getIndicesOf: function(searchStr, str) {\n        var searchStrLen = searchStr.length;\n        if (searchStrLen == 0) {\n            return [];\n        }\n        var startIndex = 0, index, indices = [];\n        str = str.toLowerCase();\n        searchStr = searchStr.toLowerCase();\n        while ((index = str.indexOf(searchStr, startIndex)) > -1) {\n            indices.push(index);\n            startIndex = index + searchStrLen;\n        }\n        return indices;\n    },\n    expand: function(str) {\n        // normalize string\n        str = str.toLowerCase()\n        // get an array of contractions, sorted by length\n        const keys = Object.keys(this.contractionsTable)\n        // for every contraction...\n        for (let i = 0; i < keys.length; i++) {\n            // get contraction character length\n            const length = keys[i].length\n            // find all the places it occurs in the string\n            const indices = this.getIndicesOf(keys[i], str).sort((a,b) => b - a)\n            // at each location, replace longform with contraction(s)\n            for (let g = 0; g < indices.length; g++) {\n                let longformLength = this.contractionsTable[keys[i]].length\n                let insertion\n                if (longformLength > 1) {\n                    insertion = `(( ${this.contractionsTable[keys[i]].join(' | ')} ))`\n                } else {\n                    insertion = this.contractionsTable[keys[i]]\n                }\n                str = spliceString(str, indices[g], length, insertion)\n            }\n        }\n        return str\n    },\n    contract: function(str) {\n        str = str.toLowerCase()\n        const keys = Object.keys(this.longformsTable).sort((a,b) => b.length - a.length)\n        // for every longform...\n        for (let i = 0; i < keys.length; i++) {\n            // get longform character length\n            const length = keys[i].length\n            // find all the places it occurs in the string\n            const indices = this.getIndicesOf(keys[i], str).sort((a,b) => b - a)\n            // at each location, replace longform with contraction\n            for (let g = 0; g < indices.length; g++) {\n                str = spliceString(str, indices[g], length, this.longformsTable[keys[i]])\n            }\n        }\n        return str\n    }\n}\n\nmodule.exports = kontractions\n"],"names":["spliceString","require","contractionsTable","longformsTable","kontractions","obj","assign","searchStr","str","searchStrLen","length","startIndex","index","indices","toLowerCase","indexOf","push","keys","Object","i","getIndicesOf","sort","a","b","g","longformLength","insertion","join","module","exports"],"mappings":"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"}